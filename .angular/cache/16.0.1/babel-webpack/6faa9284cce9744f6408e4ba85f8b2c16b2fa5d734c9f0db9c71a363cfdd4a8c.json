{"ast":null,"code":"import { Patient } from './app.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction PatientComponent_tr_29_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\")(6, \"a\", 4);\n    i0.ɵɵlistener(\"click\", function PatientComponent_tr_29_Template_a_click_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const pat_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.Edit(pat_r1));\n    });\n    i0.ɵɵtext(7, \"Edit\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"td\")(9, \"a\", 4);\n    i0.ɵɵlistener(\"click\", function PatientComponent_tr_29_Template_a_click_9_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const pat_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.Remove(pat_r1));\n    });\n    i0.ɵɵtext(10, \"Remove\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const pat_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(pat_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", pat_r1.age, \" \");\n  }\n}\nclass PatientComponent {\n  constructor() {\n    this.patientObj = new Patient();\n    this.patientObjs = new Array();\n  }\n  Update() {\n    if (this.patientObj.id == 0) {\n      //new patient\n      this.patientObj.id = this.patientObjs.length + 1;\n      this.patientObjs.push(this.patientObj);\n      this.patientObj = new Patient();\n    } else {\n      //update patient\n      this.patientObjs.forEach(element => {\n        if (element.id == this.patientObj.id) {\n          element.name = this.patientObj.name;\n          element.age = this.patientObj.age;\n          this.patientObj = new Patient();\n        }\n      });\n    }\n  }\n  Edit(patSelected) {\n    this.patientObj = new Patient();\n    this.patientObj.name = patSelected.name;\n    this.patientObj.age = patSelected.age;\n    this.patientObj.id = patSelected.id;\n  }\n  Remove(patRemoved) {\n    const index = this.patientObjs.indexOf(patRemoved);\n    if (index !== -1) {\n      this.patientObjs.splice(index, 1);\n      this.patientObj = new Patient();\n    }\n  }\n}\nPatientComponent.ɵfac = function PatientComponent_Factory(t) {\n  return new (t || PatientComponent)();\n};\nPatientComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PatientComponent,\n  selectors: [[\"ng-component\"]],\n  decls: 30,\n  vars: 6,\n  consts: [[\"type\", \"text\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", \"value\", \"ADD/UPDATE\", 3, \"click\"], [\"border\", \"1\", 1, \"bordered-table\"], [4, \"ngFor\", \"ngForOf\"], [\"href\", \"javascript:void(0)\", 3, \"click\"]],\n  template: function PatientComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"html\");\n      i0.ɵɵelement(1, \"head\");\n      i0.ɵɵelementStart(2, \"body\")(3, \"h3\");\n      i0.ɵɵtext(4, \"Hello This is mine first angular project.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(5, \" @sb_bipin \");\n      i0.ɵɵelement(6, \"br\")(7, \"br\")(8, \"br\")(9, \"br\");\n      i0.ɵɵtext(10, \" Name: \");\n      i0.ɵɵelementStart(11, \"input\", 0);\n      i0.ɵɵlistener(\"ngModelChange\", function PatientComponent_Template_input_ngModelChange_11_listener($event) {\n        return ctx.patientObj.name = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"br\");\n      i0.ɵɵtext(13, \" Age: \");\n      i0.ɵɵelementStart(14, \"input\", 0);\n      i0.ɵɵlistener(\"ngModelChange\", function PatientComponent_Template_input_ngModelChange_14_listener($event) {\n        return ctx.patientObj.age = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"br\");\n      i0.ɵɵelementStart(16, \"input\", 1);\n      i0.ɵɵlistener(\"click\", function PatientComponent_Template_input_click_16_listener() {\n        return ctx.Update();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"br\");\n      i0.ɵɵtext(18);\n      i0.ɵɵelement(19, \"br\");\n      i0.ɵɵtext(20);\n      i0.ɵɵelement(21, \"br\");\n      i0.ɵɵtext(22);\n      i0.ɵɵelementStart(23, \"table\", 2)(24, \"tr\")(25, \"td\");\n      i0.ɵɵtext(26, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"td\");\n      i0.ɵɵtext(28, \"Age\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(29, PatientComponent_tr_29_Template, 11, 2, \"tr\", 3);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"ngModel\", ctx.patientObj.name);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.patientObj.age);\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate1(\" \", 5 + 2, \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.patientObj.name, \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.patientObj.age, \" \");\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngForOf\", ctx.patientObjs);\n    }\n  },\n  dependencies: [i1.NgForOf, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel],\n  styles: [\"table[_ngcontent-%COMP%] {\\r\\n    border: 1px solid black;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSx1QkFBdUI7QUFDM0IiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});\nexport { PatientComponent };","map":{"version":3,"names":["Patient","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","PatientComponent_tr_29_Template_a_click_6_listener","restoredCtx","ɵɵrestoreView","_r3","pat_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","Edit","PatientComponent_tr_29_Template_a_click_9_listener","ctx_r4","Remove","ɵɵadvance","ɵɵtextInterpolate","name","ɵɵtextInterpolate1","age","PatientComponent","constructor","patientObj","patientObjs","Array","Update","id","length","push","forEach","element","patSelected","patRemoved","index","indexOf","splice","selectors","decls","vars","consts","template","PatientComponent_Template","rf","ctx","ɵɵelement","PatientComponent_Template_input_ngModelChange_11_listener","$event","PatientComponent_Template_input_ngModelChange_14_listener","PatientComponent_Template_input_click_16_listener","ɵɵtemplate","PatientComponent_tr_29_Template","ɵɵproperty"],"sources":["C:\\Users\\genio\\OneDrive\\Documents\\FullStack training\\Angular\\hospitalproject\\src\\app\\app.componentPatient.ts","C:\\Users\\genio\\OneDrive\\Documents\\FullStack training\\Angular\\hospitalproject\\src\\app\\app.componentPatient.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Patient } from './app.model';\n\n@Component({\n  templateUrl: './app.componentPatient.html',\n  styleUrls: ['./app.component.css']\n})\nexport class PatientComponent {\n  patientObj: Patient = new Patient();\n  patientObjs: Array<Patient> = new Array<Patient>();\n\n  Update() {\n    if (this.patientObj.id == 0) {\n      //new patient\n      this.patientObj.id = this.patientObjs.length + 1;\n      this.patientObjs.push(this.patientObj);\n      this.patientObj = new Patient();\n    }\n    else {\n      //update patient\n      this.patientObjs.forEach(element => {\n        if (element.id == this.patientObj.id) {\n          element.name = this.patientObj.name;\n          element.age = this.patientObj.age;\n          this.patientObj = new Patient();\n        }\n      });\n    }\n  }\n  Edit(patSelected: Patient) {\n    this.patientObj = new Patient();\n    this.patientObj.name = patSelected.name;\n    this.patientObj.age = patSelected.age;\n    this.patientObj.id = patSelected.id;\n\n\n  }\n  Remove(patRemoved: Patient) {\n    const index = this.patientObjs.indexOf(patRemoved);\n    if (index !== -1) {\n      this.patientObjs.splice(index, 1);\n      this.patientObj = new Patient();\n\n    }\n  }\n\n\n\n  // editRow(pat: Patient) {\n  //   const index = this.patientObjs.findIndex(p => p === pat);\n\n  //   if (index !== -1) {\n  //     // // Update the desired properties of the patient object\n  //     // this.patientObjs[index].name = \"Updated Name\";\n  //     // this.patientObjs[index].age = 20;\n\n  //     this.patientObjs[index].name = prompt(\"Enter new name\", this.patientObjs[index].name)!;\n  //     this.patientObjs[index].age = parseInt(prompt(\"Enter new age\", this.patientObjs[index].age.toString())!);\n  //   }\n  // }\n\n\n\n\n\n\n}\n","<html>\n\n<head></head>\n\n<body>\n    <h3>Hello This is mine first angular project.</h3>\n    @sb_bipin\n    <br><br>\n    <br><br>\n\n    Name: <input type=\"text\" [(ngModel)]=\"patientObj.name\" /> <br>\n    Age: <input type=\"text\" [(ngModel)]=\"patientObj.age\" /> <br>\n    <input type=\"button\" value=\"ADD/UPDATE\" (click)=\"Update()\">\n\n    <br>\n    {{5+2}}<br>\n    {{patientObj.name}}<br>\n    {{patientObj.age}}\n\n    <table border=\"1\" class=\"bordered-table\">\n        <tr>\n            <td>Name</td>\n            <td>Age</td>\n        </tr>\n        <tr *ngFor=\"let pat of patientObjs \">\n            <td>{{pat.name}}</td>\n            <td>{{pat.age}} </td>\n            <td><a href=\"javascript:void(0)\" (click)=\" Edit(pat)\">Edit</a></td>\n            <td><a href=\"javascript:void(0)\" (click)=\" Remove(pat)\">Remove</a></td>\n\n        </tr>\n    </table>\n</body>\n\n</html>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}