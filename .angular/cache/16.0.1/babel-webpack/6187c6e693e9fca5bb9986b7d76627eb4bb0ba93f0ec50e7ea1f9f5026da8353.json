{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Patient } from './app.model';\nlet AppComponent = class AppComponent {\n  constructor() {\n    this.patientObj = new Patient();\n    this.patientObjs = new Array();\n  }\n  Add() {\n    this.patientObjs.push(this.patientObj);\n    this.patientObj = new Patient();\n  }\n  // editRow(pat: Patient) {\n  //   const index = this.patientObjs.findIndex(p => p === pat);\n  //   if (index !== -1) {\n  //     // // Update the desired properties of the patient object\n  //     // this.patientObjs[index].name = \"Updated Name\";\n  //     // this.patientObjs[index].age = 20;\n  //     this.patientObjs[index].name = prompt(\"Enter new name\", this.patientObjs[index].name)!;\n  //     this.patientObjs[index].age = parseInt(prompt(\"Enter new age\", this.patientObjs[index].age.toString())!);\n  //   }\n  // }\n  Edit(patSelected) {\n    this.patientObj = patSelected;\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'patient-ui',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})], AppComponent);\nexport { AppComponent };","map":{"version":3,"names":["Component","Patient","AppComponent","constructor","patientObj","patientObjs","Array","Add","push","Edit","patSelected","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\genio\\OneDrive\\Documents\\FullStack training\\Angular\\hospitalproject\\src\\app\\app.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Patient } from './app.model';\n\n@Component({\n  selector: 'patient-ui',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  patientObj: Patient = new Patient();\n  patientObjs: Array<Patient> = new Array<Patient>();\n  patSelected: any;\n  Add() {\n    this.patientObjs.push(this.patientObj);\n    this.patientObj = new Patient();\n  }\n  // editRow(pat: Patient) {\n  //   const index = this.patientObjs.findIndex(p => p === pat);\n\n  //   if (index !== -1) {\n  //     // // Update the desired properties of the patient object\n  //     // this.patientObjs[index].name = \"Updated Name\";\n  //     // this.patientObjs[index].age = 20;\n\n  //     this.patientObjs[index].name = prompt(\"Enter new name\", this.patientObjs[index].name)!;\n  //     this.patientObjs[index].age = parseInt(prompt(\"Enter new age\", this.patientObjs[index].age.toString())!);\n  //   }\n  // }\n\n  Edit(patSelected: Patient) {\n    this.patientObj = patSelected;\n  }\n\n\n\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAASC,OAAO,QAAQ,aAAa;AAOrC,IAAaC,YAAY,GAAzB,MAAaA,YAAY;EAAzBC,YAAA;IACE,KAAAC,UAAU,GAAY,IAAIH,OAAO,EAAE;IACnC,KAAAI,WAAW,GAAmB,IAAIC,KAAK,EAAW;EA0BpD;EAxBEC,GAAGA,CAAA;IACD,IAAI,CAACF,WAAW,CAACG,IAAI,CAAC,IAAI,CAACJ,UAAU,CAAC;IACtC,IAAI,CAACA,UAAU,GAAG,IAAIH,OAAO,EAAE;EACjC;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEAQ,IAAIA,CAACC,WAAoB;IACvB,IAAI,CAACN,UAAU,GAAGM,WAAW;EAC/B;CAKD;AA5BYR,YAAY,GAAAS,UAAA,EALxBX,SAAS,CAAC;EACTY,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,sBAAsB;EACnCC,SAAS,EAAE,CAAC,qBAAqB;CAClC,CAAC,C,EACWZ,YAAY,CA4BxB;SA5BYA,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}