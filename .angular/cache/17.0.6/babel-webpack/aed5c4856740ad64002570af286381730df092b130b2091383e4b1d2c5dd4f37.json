{"ast":null,"code":"import { Patient } from './Patientapp.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nfunction PatientComponent_tr_42_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\")(8, \"a\", 8);\n    i0.ɵɵlistener(\"click\", function PatientComponent_tr_42_Template_a_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const pat_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.Edit(pat_r1));\n    });\n    i0.ɵɵtext(9, \"Edit\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"td\")(11, \"a\", 8);\n    i0.ɵɵlistener(\"click\", function PatientComponent_tr_42_Template_a_click_11_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const pat_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.Remove(pat_r1));\n    });\n    i0.ɵɵtext(12, \"Remove\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const pat_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(pat_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", pat_r1.age, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", pat_r1.code, \" \");\n  }\n}\nconst _c0 = () => ({\n  standalone: true\n});\nexport let PatientComponent = /*#__PURE__*/(() => {\n  class PatientComponent {\n    constructor(http) {\n      this.http = http;\n      this.patientObj = new Patient();\n      this.patientObjs = new Array();\n    }\n    Submit() {\n      var patdto = {};\n      patdto.code = this.patientObj.code;\n      patdto.name = this.patientObj.name;\n      patdto.age = this.patientObj.age;\n      var observbl = this.http.post(\"https://localhost:44301/api/Patient\", patdto);\n      observbl.subscribe(res => this.success(res), res => this.error(res));\n    }\n    success(res) {\n      alert(\"success\");\n    }\n    error(res) {\n      console.log(\"There is a n error:\" + res);\n    }\n    // constructor(public log: BaseLogger) {\n    // }\n    Update() {\n      if (this.patientObj.id == 0) {\n        // this.log.Log(\"Error in patient component.. \");\n        //new patient\n        this.patientObj.id = this.patientObjs.length + 1;\n        this.patientObjs.push(this.patientObj);\n        this.patientObj = new Patient();\n      } else {\n        //update patient\n        this.patientObjs.forEach(element => {\n          if (element.id == this.patientObj.id) {\n            element.name = this.patientObj.name;\n            element.age = this.patientObj.age;\n            this.patientObj = new Patient();\n          }\n        });\n      }\n    }\n    Edit(patSelected) {\n      this.patientObj = new Patient();\n      this.patientObj.name = patSelected.name;\n      this.patientObj.age = patSelected.age;\n      this.patientObj.id = patSelected.id;\n    }\n    Remove(patRemoved) {\n      const index = this.patientObjs.indexOf(patRemoved);\n      if (index !== -1) {\n        this.patientObjs.splice(index, 1);\n        this.patientObj = new Patient();\n      }\n    }\n    static #_ = this.ɵfac = function PatientComponent_Factory(t) {\n      return new (t || PatientComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: PatientComponent,\n      selectors: [[\"ng-component\"]],\n      decls: 43,\n      vars: 15,\n      consts: [[3, \"formGroup\"], [\"formControlName\", \"patientnameControl\", \"type\", \" text\", 3, \"ngModel\", \"ngModelChange\"], [3, \"hidden\"], [\"formControlName\", \"patientcodeControl\", \"type\", \"text\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", 3, \"ngModelOptions\", \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", \"value\", \"ADD/UPDATE\", 3, \"disabled\", \"click\"], [1, \"table\", \"table-bordered\", \"border-primary\", 2, \"width\", \"50vh\"], [4, \"ngFor\", \"ngForOf\"], [\"href\", \"javascript:void(0)\", 3, \"click\"]],\n      template: function PatientComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"body\")(1, \"h3\");\n          i0.ɵɵtext(2, \"Hello This is mine first angular project.\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(3, \" @sb_bipin \");\n          i0.ɵɵelement(4, \"br\")(5, \"br\")(6, \"br\")(7, \"br\");\n          i0.ɵɵelementStart(8, \"form\", 0);\n          i0.ɵɵtext(9);\n          i0.ɵɵelementStart(10, \"input\", 1);\n          i0.ɵɵlistener(\"ngModelChange\", function PatientComponent_Template_input_ngModelChange_10_listener($event) {\n            return ctx.patientObj.name = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(11, \"br\");\n          i0.ɵɵelementStart(12, \"span\", 2);\n          i0.ɵɵtext(13, \"Name is required\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(14, \"br\");\n          i0.ɵɵtext(15, \" Code: \");\n          i0.ɵɵelementStart(16, \"input\", 3);\n          i0.ɵɵlistener(\"ngModelChange\", function PatientComponent_Template_input_ngModelChange_16_listener($event) {\n            return ctx.patientObj.code = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(17, \"br\");\n          i0.ɵɵelementStart(18, \"span\", 2);\n          i0.ɵɵtext(19, \"Code is required\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(20, \"br\");\n          i0.ɵɵelementStart(21, \"span\", 2);\n          i0.ɵɵtext(22, \"A1001,B!004,C1005\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(23, \"br\");\n          i0.ɵɵtext(24, \" Age: \");\n          i0.ɵɵelementStart(25, \"input\", 4);\n          i0.ɵɵlistener(\"ngModelChange\", function PatientComponent_Template_input_ngModelChange_25_listener($event) {\n            return ctx.patientObj.age = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(26, \"br\");\n          i0.ɵɵelementStart(27, \"input\", 5);\n          i0.ɵɵlistener(\"click\", function PatientComponent_Template_input_click_27_listener() {\n            return ctx.Submit();\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(28, \"br\");\n          i0.ɵɵtext(29);\n          i0.ɵɵelement(30, \"br\");\n          i0.ɵɵtext(31);\n          i0.ɵɵelement(32, \"br\");\n          i0.ɵɵtext(33);\n          i0.ɵɵelementStart(34, \"table\", 6)(35, \"thead\")(36, \"td\");\n          i0.ɵɵtext(37, \"Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(38, \"td\");\n          i0.ɵɵtext(39, \"Age\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(40, \"td\");\n          i0.ɵɵtext(41, \"Code\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(42, PatientComponent_tr_42_Template, 13, 3, \"tr\", 7);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"formGroup\", ctx.patientObj.formPatientGroup);\n          i0.ɵɵadvance(1);\n          i0.ɵɵtextInterpolate1(\" \", ctx.patientObj.formPatientGroup.valid, \" Name: \");\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngModel\", ctx.patientObj.name);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"hidden\", !ctx.patientObj.formPatientGroup.controls[\"patientnameControl\"].hasError(\"required\"));\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.patientObj.code);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"hidden\", !ctx.patientObj.formPatientGroup.controls[\"patientcodeControl\"].hasError(\"required\"));\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"hidden\", !ctx.patientObj.formPatientGroup.controls[\"patientcodeControl\"].hasError(\"pattern\"));\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModelOptions\", i0.ɵɵpureFunction0(14, _c0))(\"ngModel\", ctx.patientObj.age);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", !ctx.patientObj.formPatientGroup.valid);\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate1(\" \", 5 + 2 - 3, \"\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate1(\" \", ctx.patientObj.name, \"\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate1(\" \", ctx.patientObj.age, \" \");\n          i0.ɵɵadvance(9);\n          i0.ɵɵproperty(\"ngForOf\", ctx.patientObjs);\n        }\n      },\n      dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgModel, i3.NgForOf, i2.FormGroupDirective, i2.FormControlName],\n      encapsulation: 2\n    });\n  }\n  return PatientComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}